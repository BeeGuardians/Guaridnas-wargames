name: Deploy CTF Problems

on:
  push:
    paths:
      - '*/*'  # Î¨∏Ï†ú ÎîîÎ†âÌÜ†Î¶¨ ÎÇ¥ ÌååÏùºÏù¥ Î≥ÄÍ≤ΩÎêòÏóàÏùÑ Îïå Ïã§Ìñâ

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      folders: ${{ steps.set.outputs.folders }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Detect changed top-level folders
        id: set
        run: |
          echo "üîç Detecting changed top-level folders..."

          # Î≥ÄÍ≤ΩÎêú ÏµúÏÉÅÏúÑ ÎîîÎ†âÌÜ†Î¶¨ Ï∂îÏ∂ú (ex: SQLI-Easy)
          CHANGED=$(git diff --name-only ${{ github.sha }} ${{ github.sha }}^ | awk -F/ '{print $1}' | sort -u)

          if [ -z "$CHANGED" ]; then
            echo 'folders=[]' >> $GITHUB_OUTPUT
          else
            echo "folders=$(echo $CHANGED | sed 's/ /","/g; s/^/["/; s/$/"]/')" >> $GITHUB_OUTPUT
          fi

          echo "üì¶ Changed folders: $CHANGED"

  deploy:
    needs: detect-changes
    runs-on: ubuntu-latest
    if: ${{ fromJson(needs.detect-changes.outputs.folders) != '[]' }}
    strategy:
      matrix:
        folder: ${{ fromJson(needs.detect-changes.outputs.folders) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # public ECRÏùÄ Î∞òÎìúÏãú us-east-1

      - name: Login to Amazon Public ECR
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

      - name: Build and push Docker image to public ECR
        run: |
          IMAGE_NAME=public.ecr.aws/i7t0x0a1/gaurdians/wargames
          IMAGE_TAG=${{ matrix.folder }}

          echo "üöß Building image $IMAGE_NAME:$IMAGE_TAG"
          docker build -t $IMAGE_NAME:$IMAGE_TAG ./${{ matrix.folder }}
          docker push $IMAGE_NAME:$IMAGE_TAG

      - name: Upload challenge files to S3 (excluding flag.txt and info.txt)
        run: |
          for file in $(find "${{ matrix.folder }}" -type f ! -name 'flag.txt' ! -name 'info.txt'); do
            aws s3 cp "$file" "s3://s3-guardians-dev/wargame_files/${{ matrix.folder }}/$(basename "$file")"
          done
