name: Deploy CTF Problems

on:
  push:
    paths:
      - '*/*'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      folders: ${{ steps.detect.outputs.folders }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Detect changed folders
        id: detect
        run: |
          echo "🔍 Detecting changed top-level folders..."

          PREV_COMMIT=$(git rev-parse HEAD~1 2>/dev/null || echo "")
          CUR_COMMIT=$(git rev-parse HEAD)

          if [ -z "$PREV_COMMIT" ]; then
            echo "⚠️ No previous commit. Using current commit only."
            CHANGED=$(git show --pretty="" --name-only "$CUR_COMMIT" | awk -F/ '{print $1}' | sort -u)
          else
            CHANGED=$(git diff --name-only "$PREV_COMMIT" "$CUR_COMMIT" | awk -F/ '{print $1}' | sort -u)
          fi

          echo "CHANGED FOLDERS RAW:"
          echo "$CHANGED"

          if [ -z "$CHANGED" ]; then
            echo 'folders=[]' >> "$GITHUB_OUTPUT"
          else
            # Convert to JSON array
            JSON_ARRAY=$(echo "$CHANGED" | jq -R -s -c 'split("\n") | map(select(length > 0))')
            echo "folders=$JSON_ARRAY" >> "$GITHUB_OUTPUT"
          fi

  deploy:
    needs: detect-changes
    runs-on: ubuntu-latest
    if: ${{ needs.detect-changes.outputs.folders != '[]' }}
    strategy:
      matrix:
        folder: ${{ fromJson(needs.detect-changes.outputs.folders) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon Public ECR
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

      - name: Build and push Docker image to ECR
        run: |
          IMAGE_NAME=public.ecr.aws/i7t0x0a1/gaurdians/wargames
          IMAGE_TAG=${{ matrix.folder }}

          docker build -t $IMAGE_NAME:$IMAGE_TAG ./${{ matrix.folder }}
          docker push $IMAGE_NAME:$IMAGE_TAG

      - name: Upload challenge files to S3 (excluding flag.txt and info.txt)
        run: |
          for file in $(find "${{ matrix.folder }}" -type f ! -name 'flag.txt' ! -name 'info.txt'); do
            aws s3 cp "$file" "s3://s3-guardians-dev/wargame_files/${{ matrix.folder }}/$(basename "$file")"
          done
